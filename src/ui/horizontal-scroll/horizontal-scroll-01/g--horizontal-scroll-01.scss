.g--horizontal-scroll-01{
    display: flex;
    overflow-x: hidden;
    height: fit-content !important;
    align-items: center;
    min-height: 100vh;
    background-color: red;
    &__wrapper{
        display: flex;
        flex-wrap: nowrap;
        min-height: 80vh;
        padding: $measure*4 10vw;
        @media all and ($viewport-type: $laptop) {
            padding: $measure*4 calc(5vw + 16px);
        }
        @media all and ($viewport-type: $mobile) {
            padding: $measure*4 calc(2.5vw + 16px);
        }
        &__item{
            width: 80vw;
            padding-right: 10vw;
            @media all and ($viewport-type: $tabletm) {
                width: 85vw;
            }
        }
    }
    &--second {}
    &--second & {
        &__wrapper{
            padding: $measure*4 0;
            &__item{
                padding-right: 0;
                width: calc(100vw - var(--scrollbar-width));
                @media all and ($viewport-type: $tabletm) {
                    width: calc(100vw - var(--scrollbar-width));
                }
            }
        }
    }
    &--third {
        overflow: hidden;
        background-color: map-get($color-options, d);
        // overflow: visible;
    }
    &--third & {
        &__wrapper{
            padding: $measure*4 0;
            &__item{
                padding-right: 0;
                min-width: calc(100vw - var(--scrollbar-width));
                // min-width: 100vw;
                max-height: 100vh;
                width: auto;
                @media all and ($viewport-type: $tabletm) {
                    width: auto;
                }
            }
        }
    }
}

.c--container{
    padding-right: $half-gutter-width;
    padding-left: $half-gutter-width;
    min-width: $g-container-width;
    margin-left: calc((100vw - #{$g-container-width})*.5);
    margin-right: calc((100vw - #{$g-container-width})*.5);
    max-height: 100%;
    width: auto;
    @media all and ($viewport-type: $laptop){
      min-width: 90vw;
      margin-left: calc((100vw - 90vw)*.5);
      margin-right: calc((100vw - 90vw)*.5);
    }
    @media all and ($viewport-type: $mobile){
      min-width: 95vw;
      margin-left: calc((100vw - 95vw)*.5);
      margin-right: calc((100vw - 95vw)*.5);
    //   display: flex;
    }
}

.c--row{
    margin-right: -$half-gutter-width;
    margin-left: -$half-gutter-width;
    display: flex;
    // flex-direction: column;
    // flex-wrap: wrap;
    max-height: 100vh;
    row-gap: 32px;
    column-gap: 0;
    width: auto;
}

.t--row{
    margin-right: -$half-gutter-width;
    margin-left: -$half-gutter-width;
    display: flex;
    // flex-direction: column;
    // flex-wrap: wrap;
    max-height: 100vh;
    row-gap: 32px;
    column-gap: 0;
    width: auto;
}

.flex-direction-mobile--row{
    @media all and ($viewport-type: $mobile){
        flex-direction: row;
    }
}
.flex-direction-mobile--column{
    @media all and ($viewport-type: $mobile){
        flex-direction: column;
    }
}

$viewport-layouts-l: (
  'all': $all,
  'desktop': $desktop,
);

$viewport-layouts-m: (
  'laptop': $laptop,
  'tabletl': $tabletl,
  'tabletm': $tabletm,
  'tablets': $tablets,
);

$viewport-layouts-s: (
  'mobile': $mobile,
);

//* Columns
@mixin make-col($i) {
    max-height: 100%;
    width: calc((($g-container-width) / $columns)*$i);
    padding-right: $half-gutter-width;
    padding-left: $half-gutter-width;
    @media all and ($viewport-type: $laptop){
        width: calc(((90vw) / $columns)*$i);
    }
    @media all and ($viewport-type: $mobile){
        width: calc(((95vw) / $columns)*$i);
    }
  }

/*Start loop columns*/
@mixin build-columns($size, $bkpt) {
    @for $i from 1 through $columns {
      @if ($size == 'all') {
        .c--col-#{$i} {
          @include make-col($i);
        }
      } @else {
        .c--col-#{$size}-#{$i} {
            max-height: 100%;
            $value-component: calc((($g-container-width) / $columns)*$i);
            @media all and ($viewport-type: #{$bkpt}) {
                width: $value-component;
            }
        }
      }
    }
  }
  // Build Columns
  @each $size, $bkpt in $viewport-layouts-l {
    @include build-columns($size, $bkpt);
  }

  /*Start loop columns*/
@mixin build-columns($size, $bkpt) {
    @for $i from 1 through $columns {
        .c--col-#{$size}-#{$i} {
            $value-component: calc(((90vw) / $columns)*$i);
            @media all and ($viewport-type: #{$bkpt}) {
                width: $value-component;
            }
        }
    }
  }
  @each $size, $bkpt in $viewport-layouts-m {
    @include build-columns($size, $bkpt);
  }
  
@mixin build-columns($size, $bkpt) {
    @for $i from 1 through 24 {
        .c--col-#{$size}-#{$i} {
            $value-component: calc(((95vw) / $columns)*$i);
            @media all and ($viewport-type: #{$bkpt}) {
                width: $value-component;
            }
        }
    }
  }
  @each $size, $bkpt in $viewport-layouts-s {
    @include build-columns($size, $bkpt);
  }


  //* bottom space
  @mixin build-space($size, $bkpt) {
      @if ($size == 'all') {
        .c--sp {
          margin-bottom: 100%;
        }
      } @else {
        .c--sp-#{$size} {
            @media all and ($viewport-type: #{$bkpt}) {
                margin-bottom: 100%;
            }
        }
        .c--sp-#{$size}-0 {
            @media all and ($viewport-type: #{$bkpt}) {
                margin-bottom: 0;
            }
        }
      }
  }
  @each $size, $bkpt in $viewport-layouts {
    @include build-space($size, $bkpt);
  }